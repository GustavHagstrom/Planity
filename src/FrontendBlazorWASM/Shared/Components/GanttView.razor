@using System.Globalization

@if(Items is not null)
{
    <div>

        @* left side, edit for control per row *@
        <div style="width: @LeftWidthPx; margin-top: @HeaderHeightPx;">
            @foreach (var item in Items)
            {
                <div style="height: @RowHeightPx; width: 100%;">
                    <div class="gantt-row-content">
                        @* Render item content here, e.g. item.Name *@
                        @item.Name
                    </div>
                </div>

            }

        </div>

        @* right side *@
        <div>
            <svg style="height: 100%; width: 100%;">

                <text>Right side</text>
            </svg>
        </div>

    </div>
}

    





@code {

    public enum GanttViewMode
    {
        Year,
        Month,
        Week,
        Day
    }

    [Parameter] public DateTime Start { get; set; }
    [Parameter] public DateTime End { get; set; }
    [Parameter] public GanttViewMode Mode { get; set; } = GanttViewMode.Month;
    [Parameter] public double PixelsPerDay { get; set; } = 50;
    [Parameter] public double RowPixelHeight { get; set; } = 50;
    [Parameter] public double LeftPixelWidth { get; set; } = 220;
    [Parameter] public IEnumerable<IGanttItem>? Items { get; set; }

    public string UnitWidthpx => Mode switch
    {
        GanttViewMode.Year => $"{PixelsPerDay * 365 / 12}px",
        GanttViewMode.Month => $"{PixelsPerDay * 30}px",
        GanttViewMode.Week => $"{PixelsPerDay * 7}px",
        GanttViewMode.Day => $"{PixelsPerDay}px",
        _ => throw new ArgumentOutOfRangeException()
    };
    public string LeftWidthPx => $"{LeftPixelWidth}px";
    public string RowHeightPx => $"{RowPixelHeight}px";
    public string HeaderHeightPx => $"50px";



    private IEnumerable<DateTime> EachDay(DateTime from, DateTime to)
    {
        for (var day = from.Date; day <= to.Date; day = day.AddDays(1))
            yield return day;
    }
}