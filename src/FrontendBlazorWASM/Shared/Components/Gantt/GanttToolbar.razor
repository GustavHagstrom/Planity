@inject IStringLocalizer<GanttToolbar> Localizer
<MudToolBar Dense="true">
    <div class="left">
        <MudText Typo="Typo.h6" Align="Align.Center">@Title</MudText>
        <MudSelect Variant="Variant.Outlined" Margin="Margin.Dense" Dense="true" T="GanttDragMode" MultiSelection="false" SelectedValuesChanged="(e) => DragModeChanged.InvokeAsync(e.FirstOrDefault())" ToStringFunc="ToStringFunc" MultiSelectionTextFunc="ToStringFunc">
            <MudSelectItem Value="GanttDragMode.None">Inget</MudSelectItem>
            <MudSelectItem Value="GanttDragMode.EditDate">Ändra datum</MudSelectItem>
            <MudSelectItem Value="GanttDragMode.Link">Skapa koppling</MudSelectItem>
        </MudSelect>
    </div>
    <div class="center">

    </div>
    <div class="right">
    </div>
    

</MudToolBar>

@code {
    [Parameter] public GanttDragMode DragMode { get; set; }
    [Parameter] public EventCallback<GanttDragMode> DragModeChanged { get; set; }
    [Parameter] public string? Title { get; set; }

    string ToStringFunc(GanttDragMode mode) 
    {
        string baseString = Localizer["Dragläge:"];
        string modeString = mode switch
        {
            GanttDragMode.None => Localizer["Inget"],
            GanttDragMode.EditDate => Localizer["Ändra datum"],
            GanttDragMode.Link => Localizer["Skapa koppling"],
            _ => mode.ToString()
        };
        return $"{baseString} {modeString}";
    }
    

    private async Task OnDragModeChanged(ChangeEventArgs e)
    {
        var value = e.Value?.ToString();
        if (value == "EditDate")
            await DragModeChanged.InvokeAsync(GanttDragMode.EditDate);
        else if (value == "Link")
            await DragModeChanged.InvokeAsync(GanttDragMode.Link);
        else
            await DragModeChanged.InvokeAsync(GanttDragMode.None);
    }
}
