@using System.Collections.Generic
@using System

<style>
.gantt-leftpanel-bottom-border {
    box-sizing: border-box;
    border-bottom: 1px solid Black;
}
</style>

@if (View.Items is not null)
{
    <div style="border-right: 1px solid Black; padding-bottom: 10px;">
        <div style="width: @View.LeftWidthPx; height: @View.HeaderHeightPx;" class="gantt-leftpanel-bottom-border pa-4">
            <MudText Typo="Typo.h6" ><b>@Title</b></MudText>
        </div>
        <div style="width: @View.LeftWidthPx; position: relative;">
            @foreach (var item in View.Items ?? Enumerable.Empty<IGanttItem>())
            {
                <GanttLeftPanelRow Item="item" Level="0" RowHeightPx="@View.RowHeightPx" SelectedItem="View.SelectedItem" OnRowClick="EventCallback.Factory.Create<IGanttItem>(this, OnRowClick)" OnExpandCollapse="View.TriggerStateHasChanged" />
            }
        </div>
    </div>
}


@code {
    [CascadingParameter] public GanttView View { get; set; } = null!;
    [Parameter] public string? Title { get; set; }

    protected override void OnParametersSet()
    {
        if (View is null)
        {
            throw new InvalidOperationException("GanttView cascading parameter must not be null.");
        }
    }

    private async Task OnRowClick(IGanttItem item)
    {
        if (View.SelectedItem != item)
        {
            await View.SelectItemAsync(item);
        }
    }
}
