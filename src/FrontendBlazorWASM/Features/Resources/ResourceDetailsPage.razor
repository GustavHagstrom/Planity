@page "/resources/{ResourceId}"
@inject Planity.FrontendBlazorWASM.Shared.Services.IResourceService ResourceService
@inject NavigationManager NavigationManager
@inject IStringLocalizer<ResourceDetailsPage> localizer
@inject IJSRuntime JS

<MudPaper Class="pa-4">
    <EntityForm TModel="Resource" Model="resource" OnValidSubmit="SaveResource" Title="@localizer["Resursöversikt"]">
    @if (resource == null)
    {
        <MudProgressCircular Indeterminate Color="Color.Primary"></MudProgressCircular>
    }
    else
    {
        
        <MudTextField T="string" Label="@localizer["Namn"]" @bind-Value="resource.Name" For="() => resource.Name" Required="true"></MudTextField>
        <MudTextField T="string" Label="@localizer["Roll"]" @bind-Value="resource.Role" For="() => resource.Role"></MudTextField>
        <MudTextField T="string" Label="@localizer["Organisation"]" @bind-Value="resource.OrganizationId" For="() => resource.OrganizationId"></MudTextField>
        
    }
    </EntityForm>
</MudPaper>

@code {
    [Parameter]
    public string? ResourceId { get; set; }
    private Resource? resource;

    protected override async Task OnParametersSetAsync()
    {
        if (!string.IsNullOrEmpty(ResourceId))
        {
            resource = await ResourceService.GetResourceByIdAsync(ResourceId);
        }
    }

    private async Task SaveResource()
    {
        if (resource != null)
        {
            await ResourceService.UpdateResourceAsync(resource);
            await JS.InvokeVoidAsync("history.back");
        }
    }

}
