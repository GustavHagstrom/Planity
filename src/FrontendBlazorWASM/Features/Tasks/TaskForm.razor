@using Planity.FrontendBlazorWASM.Shared.Models
@using TaskStatus = Planity.FrontendBlazorWASM.TaskStatus;
@using MudBlazor

<MudForm @ref="mudForm" Model="task">
    <MudTextField @bind-Value="task.Name" Label="Namn" For="() => task.Name" Required="true" />
    <MudTextField @bind-Value="task.Description" Label="Beskrivning" For="() => task.Description" />
    <MudDatePicker @bind-Date="task.Start" Label="Startdatum" />
    <MudDatePicker @bind-Date="task.End" Label="Slutdatum" />
    <MudSelect T="TaskStatus" Label="Status" @bind-Value="task.Status">
        @foreach (TaskStatus status in System.Enum.GetValues(typeof(TaskStatus)))
        {
            <MudSelectItem Value="@status">@status</MudSelectItem>
        }
    </MudSelect>
    <MudTextField @bind-Value="task.AssignedResourceName" Label="Tilldelad resurs" For="() => task.AssignedResourceName" />
    <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="HandleValidSubmit">Spara</MudButton>
</MudForm>

@code {
    [Parameter] public ProjectTask? TaskModel { get; set; }
    [Parameter] public EventCallback<ProjectTask> OnSaved { get; set; }

    private ProjectTask task = new();
    private MudForm? mudForm;
    private bool isNew => TaskModel is null;

    protected override void OnParametersSet()
    {
        if (TaskModel != null)
        {
            task = new ProjectTask
            {
                Id = TaskModel.Id,
                Name = TaskModel.Name,
                Description = TaskModel.Description,
                Start = TaskModel.Start,
                End = TaskModel.End,
                Status = TaskModel.Status,
                AssignedResourceId = TaskModel.AssignedResourceId,
                AssignedResourceName = TaskModel.AssignedResourceName,
                OrganizationId = TaskModel.OrganizationId
            };
        }
    }

    private async Task HandleValidSubmit()
    {
        await OnSaved.InvokeAsync(task);
    }
}
