@page "/projects/{id}"
@inject NavigationManager NavigationManager
@inject IProjectService ProjectService
@inject IResourceService ResourceService
@inject IStringLocalizer<ProjectDetailsPage> localizer
@inject IJSRuntime JS
@inject IGanttDateCalculator GanttDateCalculator

<EntityFormsPageLayout Title="@localizer["Projektinformation"]" IsLoading="Project is null || Resources is null" OnSave="Save">
    <MainContent>

        <ProjectForm ProjectModel="Project" />

        <MudDivider Class="my-4"></MudDivider>

        <EntityTable Title="@localizer["Uppgifter"]" Items="Project!.Tasks" EditLinkFunction="x => Routes.TaskDetails(x.Id)">
            <HeaderContent>
                <MudTh>@localizer["Namn"]</MudTh>
                <MudTh>@localizer["Startdatum"]</MudTh>
                <MudTh>@localizer["Slutdatum"]</MudTh>
                <MudTh>@localizer["Tilldelad resurs"]</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd>
                    @context.Name
                </MudTd>
                <MudTd>
                    @context.Start?.ToString("yyyy-MM-dd")
                </MudTd>
                <MudTd>
                    @GanttDateCalculator.CalculateEnd(context, Resources!)
                </MudTd>
                <MudTd>
                    @Resources?.FirstOrDefault(r => r.Id == context.ResourceId)?.Name
                </MudTd>
            </RowTemplate>
        </EntityTable>

        <EntityTable Title="@localizer["Milstenar"]" Items="Project!.Milestones" EditLinkFunction="x => Routes.MilestoneDetails(x.Id)">
            <HeaderContent>
                <MudTh>@localizer["Namn"]</MudTh>
                <MudTh>@localizer["Datum"]</MudTh>
                <MudTh>@localizer["Beskrivning"]</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd>
                    @context.Name
                </MudTd>
                <MudTd>
                    @context.Start?.ToString("yyyy-MM-dd")
                </MudTd>
                <MudTd>
                    @context.Description
                </MudTd>
            </RowTemplate>
        </EntityTable>

    </MainContent>
</EntityFormsPageLayout>

@code {
    [Parameter] public string? Id { get; set; }

    private Project? Project;
    private List<Resource>? Resources;

    protected override async Task OnInitializedAsync()
    {
        var resources = await ResourceService.GetResourcesAsync();
        Resources = resources;
        if (!string.IsNullOrEmpty(Id))
        {
            var project = await ProjectService.GetProjectByIdAsync(Id);
            if (project != null)
                Project = project;
        }
    }

    private async Task Save()
    {
        if (Project == null)
            return;
        await ProjectService.UpdateProjectAsync(Project);
        await JS.InvokeVoidAsync("history.back");
    }
}
