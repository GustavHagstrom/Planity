@page "/milestones/{MilestoneId}"
@inject IProjectService ProjectService
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@inject IStringLocalizer<MilestoneDetailsPage> localizer

<EntityFormsPageLayout Title="@localizer["Milestoneinformation"]" IsLoading="milestone is null" OnSave="Save">
    <MainContent>
        <MilestoneForm MilestoneModel="milestone"/>
    </MainContent>
</EntityFormsPageLayout>

@code {
    [Parameter] public string? MilestoneId { get; set; }
    private Milestone? milestone;
    private string? projectId;

    protected override async Task OnParametersSetAsync()
    {
        // Find the project and milestone by searching all projects
        var projects = await ProjectService.GetProjectsAsync();
        var found = projects.SelectMany(p => p.Milestones.Select(m => (Milestone: m, ProjectId: p.Id)))
                            .FirstOrDefault(x => x.Milestone.Id == MilestoneId);
        milestone = found.Milestone;
        projectId = found.ProjectId;
    }

    private async Task Save()
    {
        if (milestone != null && projectId != null)
        {
            await ProjectService.UpdateMilestoneAsync(projectId, milestone);
            await JS.InvokeVoidAsync("history.back");
        }
    }
}
